package telas;

import classes.Jogador;
import classes.Jogo;
import classes.Organizador;
import classes.Torneio;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class BuscaTorneios extends javax.swing.JFrame {

    public static Torneio torneioSelecionado;
    private ArrayList<Torneio> todosTorneios;
    private ArrayList<Torneio> torneiosFiltrados;
    private boolean pesquisouJogo;
    
    /**
     * Creates new form ListagemTorneios
     */
    public BuscaTorneios() {
        initComponents();
        
        todosTorneios = new ArrayList<>();
        if (Login.usuarioLogado instanceof Organizador) {
            todosTorneios = ((Organizador) Login.usuarioLogado).getTorneiosCriados();
        } else {
            try {

                FileInputStream fileIn = new FileInputStream(new File("src\\arquivos\\torneios.txt"));
                ObjectInputStream objectIn = new ObjectInputStream(fileIn);

                todosTorneios = (ArrayList<Torneio>) objectIn.readObject();
                fileIn.close();
                objectIn.close();

            } catch (FileNotFoundException e) {
                System.out.println("Arq. n√£o encontrado");
            } catch (IOException e) {
                System.out.println("Erro inicializando stream");
            } catch (ClassNotFoundException e) {
                System.out.println("Nao achei a classe");
            }
        }
        
        montarTabela(todosTorneios);
        estadoInicial();

        pesquisouJogo = false;
    }
    
    // habilita e desabilita os elementos da tela para seu estado inicial desejado
    private void estadoInicial() {
        txtNome.setText("");
        frmData.setText("");
        
        txtNome.setEnabled(true);
        frmData.setEnabled(true);
        btnEscolherJogo.setEnabled(true);
        btnVoltar.setEnabled(true);
    }
    
    private void montarTabela(ArrayList<Torneio> listaTorneio) {
        DefaultTableModel modelo = new DefaultTableModel(new Object[] {"Nome", "Jogo", "Data", "Participantes", "Nota"}, 0);
        DateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");
        
        for (int i = 0 ; i < listaTorneio.size() ; i++) {
            String data = formatador.format(listaTorneio.get(i).getDataDeRealizacao());
            Object linha[] = {listaTorneio.get(i).getNome(), 
                              listaTorneio.get(i).getJogo().getNome(), 
                              data,
                              listaTorneio.get(i).getNumeroDeEquipes(),
                              listaTorneio.get(i).calcularNota()};
            modelo.addRow(linha);
        }
        
        tblTorneios.setModel(modelo);
        
        tblTorneios.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblTorneios.getColumnModel().getColumn(1).setPreferredWidth(50);
        tblTorneios.getColumnModel().getColumn(2).setPreferredWidth(20);
        tblTorneios.getColumnModel().getColumn(3).setPreferredWidth(10);
        tblTorneios.getColumnModel().getColumn(4).setPreferredWidth(10);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrTabela = new javax.swing.JScrollPane();
        tblTorneios = new javax.swing.JTable();
        btnVoltar = new javax.swing.JButton();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        frmData = new javax.swing.JFormattedTextField();
        lblData = new javax.swing.JLabel();
        btnEscolherJogo = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/trofeu32px.png")).getImage());

        scrTabela.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Torneios", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        tblTorneios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nome", "Jogo", "Data", "Participantes", "Nota"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTorneios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTorneiosMouseClicked(evt);
            }
        });
        scrTabela.setViewportView(tblTorneios);

        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/exit32px.png"))); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        lblNome.setText("Nome:");

        try {
            frmData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblData.setText("Data");

        btnEscolherJogo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEscolherJogo.setText("Escolher Jogo");
        btnEscolherJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscolherJogoActionPerformed(evt);
            }
        });

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar32px.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(frmData, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPesquisar))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrTabela, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnVoltar))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNome)
                                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblData)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEscolherJogo)
                                .addGap(67, 67, 67)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblData)
                    .addComponent(btnEscolherJogo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(frmData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(btnPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVoltar)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEscolherJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscolherJogoActionPerformed
        pesquisouJogo = true;
        BuscaJogos.vemBuscaTorneio = true;
        new BuscaJogos().setVisible(true);
    }//GEN-LAST:event_btnEscolherJogoActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        String nome;
        nome = txtNome.getText();
        // lista com os torneios a serem exibidos na tabela
        torneiosFiltrados = new ArrayList<>();
        // Se tem data
        if (!pesquisouJogo || (pesquisouJogo && BuscaJogos.jogoSelecionado == null)) {
            if (!frmData.getText().equals("  /  /    ")) {
                try {
                    // se a data for valida, podemos fazer a busca
                    Date data = new SimpleDateFormat("dd/MM/yyyy").parse(frmData.getText());

                    // procura em todos os elementos da lista pra ver aqueles que tem as partes dadas nos txtField e mesma data
                    for (int i = 0 ; i < todosTorneios.size() ; i++) {
                        Torneio torneio = todosTorneios.get(i);
                        if (torneio.getNome().contains(nome) && torneio.getDataDeRealizacao().equals(data))
                            torneiosFiltrados.add(torneio);
                    }
                } catch(ParseException e) {
                    JOptionPane.showMessageDialog(null, "Data inv√°lida!", "N√£o foi poss√≠vel realizar o cadastro", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                // procura em todos os elementos da lista pra ver aqueles que tem as partes dadas nos txtField
                for (int i = 0 ; i < todosTorneios.size() ; i++) {
                    Torneio torneio = todosTorneios.get(i);
                    if (torneio.getNome().contains(nome))
                        torneiosFiltrados.add(torneio);
                }
            }
        } else {
            Jogo jogo = BuscaJogos.jogoSelecionado;
            if (!frmData.getText().equals("  /  /    ")) {
                try {
                    // se a data for valida, podemos fazer a busca
                    Date data = new SimpleDateFormat("dd/MM/yyyy").parse(frmData.getText());

                    // procura em todos os elementos da lista pra ver aqueles que tem as partes dadas nos txtField e mesma data
                    for (int i = 0 ; i < todosTorneios.size() ; i++) {
                        Torneio torneio = todosTorneios.get(i);
                        if (torneio.getNome().contains(nome) && torneio.getDataDeRealizacao().equals(data) 
                                && torneio.getJogo().equals(jogo))
                            torneiosFiltrados.add(torneio);
                    }
                } catch(ParseException e) {
                    JOptionPane.showMessageDialog(null, "Data inv√°lida!", "N√£o foi poss√≠vel realizar o cadastro", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                // procura em todos os elementos da lista pra ver aqueles que tem as partes dadas nos txtField
                for (int i = 0 ; i < todosTorneios.size() ; i++) {
                    Torneio torneio = todosTorneios.get(i);
                    if (torneio.getNome().contains(nome) && torneio.getJogo().equals(jogo))
                        torneiosFiltrados.add(torneio);
                }
            }
        }
        
        if (!torneiosFiltrados.isEmpty())
            montarTabela(torneiosFiltrados);
        else
            JOptionPane.showMessageDialog(null, "Nenhum torneio corresponde a esses par√¢metros!", "Falha", JOptionPane.WARNING_MESSAGE);

    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void tblTorneiosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTorneiosMouseClicked
        int resp, idx = tblTorneios.getSelectedRow();
        
        if (idx >= 0 && idx < torneiosFiltrados.size()) {
            if (Login.usuarioLogado == null) {
                resp = JOptionPane.showConfirmDialog(null, "Deseja excluir esse torneio do sistema?", "Confirmar", JOptionPane.YES_NO_OPTION);
                // 0 = sim, 1 = nao
/*
                if (resp == 0) {
                    torneios
                    boolean deuCerto = armazenarHash(usuarios);
                    if (deuCerto) {
                        JOptionPane.showMessageDialog(null, "Jogador exclu√≠do com sucesso!", "Sucesso", JOptionPane.PLAIN_MESSAGE);
                        // refaz a lista e j√° exibe a modificada, sem precisar ler o arquivo novamente
                        montarLista(usuarios);
                        montarTabela(listaJogadores);
                    }                    
                }*/    
            } else {
                torneioSelecionado = torneiosFiltrados.get(idx);
                new MostrarTorneio().setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_tblTorneiosMouseClicked

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        if (Login.usuarioLogado == null) {
            // se √© um administrador, volta para tela Admin
            new Admin().setVisible(true);
        } else if (Login.usuarioLogado instanceof Jogador) {
            // se √© jogador, volta pra sua tela inicial
            new TelaJogador().setVisible(true);
        } else if (Login.usuarioLogado instanceof Organizador) {
            // se e organizador, volta pra sua tela
            new TelaOrganizador().setVisible(true);
        }
         this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscaTorneios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscaTorneios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscaTorneios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscaTorneios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuscaTorneios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEscolherJogo;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JFormattedTextField frmData;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblNome;
    private javax.swing.JScrollPane scrTabela;
    private javax.swing.JTable tblTorneios;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
